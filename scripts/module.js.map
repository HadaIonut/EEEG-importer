{"version":3,"file":"module.js","sources":["../lib/CityImporter.ts","../lib/createActor.ts","../lib/createAndUpdateActor.ts","../lib/decodeHTML.ts","../lib/prepareText.ts","../lib/createJournalEntry.ts","../lib/createAndUpdateJournal.ts","../lib/getTownName.ts","../lib/getTownSize.ts","../lib/parseMainAttributes.ts","../lib/iterateJson.ts","../lib/Utils.ts","../lib/parseSecAttributes.ts","../lib/secondPassActors.ts","../lib/secondPassJournals.ts","../lib/createCity.ts","../lib/ImportWindow.ts","../lib/module.ts"],"sourcesContent":["import '@league-of-foundry-developers/foundry-vtt-types'\nexport type RawTextType = string\nexport let game: Game\n\nexport type ContainerStrings = 'start' | 'town'\nexport type ContainerRecords = 'buildings' | 'NPCs' | 'factions'\nexport type ContainerHeader = ContainerRecords | ContainerStrings\n\nexport interface Data {\n  name: string\n  key: string\n  output: string | Data\n}\ninterface Container {\n  [key: string]: Record<string, Data> | string\n}\n\nexport type ExportedJson = {\n  [key in ContainerStrings]: string\n} & {\n    [key in ContainerRecords]: Record<string, Data>\n  }\n","import { RawTextType } from './CityImporter'\r\n\r\nexport const createActor = async (entityName: string, rawText: RawTextType, folder: string): Promise<Actor> => await Actor.create({\r\n  name: entityName,\r\n  data: {\r\n    details: {\r\n      biography: {\r\n        value: prepareText(rawText)\r\n      }\r\n    }\r\n  },\r\n  type: 'npc',\r\n  folder: folder\r\n})\r\n","import { createActor } from './createActor'\r\n\r\nexport const createAndUpdateActor = (uidToActorIdMap, createdActorsArray) => async (actorData, NPCFolder: string) => {\r\n  const newActor = await createActor(\r\n    actorData.name,\r\n    `<div class=\"EEEG\">${actorData.output}</div>`,\r\n    NPCFolder\r\n  )\r\n  uidToActorIdMap.set(actorData.key, newActor.data._id)\r\n  createdActorsArray.push(newActor.data._id)\r\n}\r\n","export const decodeHTML = (rawText: string) => {\r\n  const txt = document.createElement('textarea')\r\n  txt.innerHTML = rawText\r\n  return txt.value\r\n}\r\n","import { RawTextType } from './CityImporter'\r\nimport { decodeHTML } from './decodeHTML'\r\n\r\nexport const prepareText = (rawText: RawTextType) => {\r\n  const decoded = decodeHTML(rawText)\r\n  const $a = $('<div />', { html: decoded })\r\n  const located = $a.find('.link-internal')\r\n  located.replaceWith((index, text) => {\r\n    const id = located[index].getAttribute('data-id')\r\n    if (text.includes('Description of')) return `@JournalEntry[town]{${text}}`\r\n    return id !== '' || id ? `@JournalEntry[${id}]{${text}}` : text\r\n  })\r\n  return $a.html()\r\n}\r\n","import { RawTextType } from './CityImporter'\r\nimport { prepareText } from './prepareText'\r\n\r\nexport const createJournalEntry = async (entityName: string, rawText: RawTextType, folder: string): Promise<JournalEntry> =>\r\n  await JournalEntry.create({\r\n    name: entityName,\r\n    content: prepareText(rawText),\r\n    folder: folder\r\n  })\r\n","import { createJournalEntry } from './createJournalEntry'\r\n\r\nexport const createAndUpdateJournal = (uidToIdMap, createdArray) => async (journalData: JournalEntry, folder: string) => {\r\n  const newEntry = await createJournalEntry(\r\n    journalData.name,\r\n    `<div class=\"EEEG\">${journalData.output}</div>`,\r\n    folder\r\n  )\r\n  uidToIdMap.set(journalData.key, newEntry.data._id)\r\n  createdArray.push(newEntry.data._id)\r\n}\r\n","import { ExportedJson } from './CityImporter'\r\n\r\nexport const getTownName = (jsonData: ExportedJson) => {\r\n  const parser = new DOMParser()\r\n  const elem = parser.parseFromString(jsonData.start, 'text/html')\r\n  return $(elem.body).find('.town-name')[0].getAttribute('data-town-name')\r\n}\r\n","import { ExportedJson } from './CityImporter'\r\n\r\nexport const getTownSize = (jsonData: ExportedJson): number => {\r\n  let townSize = 0\r\n  townSize += Object.keys(jsonData).length\r\n  for (const attribute in jsonData) {\r\n    if (!jsonData.hasOwnProperty(attribute)) continue\r\n\r\n    if (typeof jsonData[attribute] !== 'string') { townSize += Object.keys(jsonData[attribute]).length * 2 }\r\n  }\r\n  return townSize\r\n}\r\n","import { ContainerHeader } from './CityImporter'\r\n\r\nexport const parseMainAttributes = async (\r\n  attribute: ContainerHeader,\r\n  cityName: string,\r\n  attributeData,\r\n  folderId,\r\n  createdArray\r\n) => {\r\n  let name = attribute === 'start' ? cityName : attribute\r\n  name = name === 'town' ? `Description of ${cityName}` : name\r\n\r\n  const newEntry = await createJournalEntry(name, attributeData, folderId)\r\n  createdArray.push(newEntry.data._id)\r\n}\r\n","import { ExportedJson } from './CityImporter'\r\nimport { createAndUpdateActor } from './createAndUpdateActor'\r\nimport { createAndUpdateJournal } from './createAndUpdateJournal'\r\nimport { parseMainAttributes } from './parseMainAttributes'\r\n\r\nexport const iterateJson = async (\r\n  jsonData: ExportedJson,\r\n  cityName: string,\r\n  folderId: string,\r\n  NPCsAsActors,\r\n  loadingBar,\r\n  parseSecAttr\r\n) => {\r\n  const uidToIdMap = new Map()\r\n  const uidToActorIdMap = new Map()\r\n  const createdArray = []\r\n  const createdActorsArray = []\r\n  const actorCreateMethod = createAndUpdateActor(\r\n    uidToActorIdMap,\r\n    createdActorsArray\r\n  )\r\n  const journalCreateMethod = createAndUpdateJournal(uidToIdMap, createdArray)\r\n\r\n  for (const attribute in jsonData) {\r\n    if (!jsonData.hasOwnProperty(attribute)) { continue }\r\n\r\n    loadingBar()\r\n    if (typeof jsonData[attribute] !== 'string') {\r\n      await parseSecAttr(\r\n        jsonData[attribute],\r\n        attribute,\r\n        actorCreateMethod,\r\n        journalCreateMethod\r\n      )\r\n    } else {\r\n      await parseMainAttributes(\r\n        attribute,\r\n        cityName,\r\n        jsonData[attribute],\r\n        folderId,\r\n        createdArray\r\n      )\r\n    }\r\n  }\r\n  return [\r\n    [uidToIdMap, createdArray],\r\n    [uidToActorIdMap, createdActorsArray]\r\n  ]\r\n}\r\n","export const loading = (context) => {\n  const $loading = document.getElementById('loading')\n  const $loadingBar = $loading.find('#loading-bar')\n  const $context = $loadingBar.find('#context')\n  const $progress = $loadingBar.find('#progress')\n  $context.text(context || '')\n\n  return (min: number) => (max: number) => () => {\n    if (min >= max) {\n      $loading.fadeOut()\n      return\n    }\n\n    const percentage = Math.min(Math.floor((min * 100) / max), 100)\n    $loading.fadeIn()\n    $progress.text(`${percentage}%`)\n    $loadingBar.css('width', `${percentage}%`)\n    ++min\n  }\n}\n\nexport const capitalize = (text: string) => text.charAt(0).toUpperCase() + text.slice(1)\n","import { ContainerHeader } from './CityImporter'\r\nimport { capitalize } from './Utils'\r\n\r\nexport const parseSecAttributes = (NPCsAsActors, folderId, loadingBar, hasCustomNPCLocation, location) =>\r\n  async (primaryAttribute, attributeType: ContainerHeader, createActor, createJournal) => {\r\n    let folder, NPCFolder\r\n    if (!(hasCustomNPCLocation[0] && attributeType === 'NPCs')) {\r\n      folder = await Folder.create({\r\n        name: capitalize(attributeType),\r\n        type: 'JournalEntry',\r\n        parent: folderId\r\n      })\r\n    }\r\n\r\n    if (NPCsAsActors && attributeType === 'NPCs' && !hasCustomNPCLocation[1]) {\r\n      NPCFolder = await Folder.create({\r\n        name: capitalize(attributeType),\r\n        type: 'Actor',\r\n        parent: null\r\n      })\r\n    }\r\n\r\n    for (const secAttribute in primaryAttribute) {\r\n      if (!primaryAttribute.hasOwnProperty(secAttribute)) { continue }\r\n      loadingBar()\r\n\r\n      if (NPCsAsActors && attributeType === 'NPCs') {\r\n        await createActor(\r\n          primaryAttribute[secAttribute],\r\n          hasCustomNPCLocation[1] ? location[1] : NPCFolder.data._id\r\n        )\r\n      }\r\n      await createJournal(\r\n        primaryAttribute[secAttribute],\r\n        hasCustomNPCLocation[0] && attributeType === 'NPCs'\r\n          ? location[0]\r\n          : folder.data._id\r\n      )\r\n    }\r\n  }\r\n","import { game } from './CityImporter'\r\n\r\nexport const secondPassActors = async (ids) => {\r\n  const allActors: Actors = game.actors\r\n  const allJournals: Journal = game.journal\r\n  for (const id of ids[1]) {\r\n    const actor = allActors.get(id)\r\n    if (!actor) { continue }\r\n    const actorClone = JSON.parse(JSON.stringify(actor))\r\n    let replaceText = actorClone.data.details.biography.value\r\n    replaceText = replaceText.replace(\r\n      /@JournalEntry\\[([\\w]+)\\]{(.*?)}/g,\r\n      (_0, original, name) => {\r\n        for (const value of allJournals.values()) {\r\n          if (value.data.name.toLowerCase() === name.toLowerCase()) { return `@JournalEntry[${value.data._id}]{${name}}` }\r\n        }\r\n        return name\r\n      }\r\n    )\r\n    replaceText = replaceText.replace(\r\n      /@JournalEntry\\[(\\w+-\\w+-\\w+-\\w+-\\w+)\\]/g,\r\n      (_0, uid) => `@Actor[${ids[0].get(uid)}]`\r\n    )\r\n    replaceText = replaceText.replace(\r\n      /@Actor\\[undefined\\]{(.*?)}/g,\r\n      (_0, name) => name\r\n    )\r\n    actorClone.data.details.biography.value = replaceText\r\n    await actor.update(actorClone)\r\n  }\r\n}\r\n","import { game } from './CityImporter'\r\nimport { capitalize } from './Utils'\r\n\r\nexport const secondPassJournals = async (ids, loadingBar) => {\r\n  const allJournals: Journal = game.journal\r\n  for (const id of ids[1]) {\r\n    loadingBar()\r\n    const journal = allJournals.get(id)\r\n    const journalClone = JSON.parse(JSON.stringify(journal))\r\n    journalClone.content = journalClone.content.replace(\r\n      /@JournalEntry\\[(\\w+)\\]/g,\r\n      (_0, uid) => `@JournalEntry[${ids[0].get(uid) || ids[0].get(capitalize(uid))}]`\r\n    )\r\n    journalClone.content = journalClone.content.replace(\r\n      /@JournalEntry\\[(\\w+-\\w+-\\w+-\\w+-\\w+)\\]/g,\r\n      (_0, uid) => `@JournalEntry[${ids[0].get(uid)}]`\r\n    )\r\n    journalClone.content = journalClone.content.replace(\r\n      /@JournalEntry\\[undefined\\]{(.*?)}/g,\r\n      (_0, name) => name\r\n    )\r\n    journalClone.content = journalClone.content.replace(\r\n      /@JournalEntry\\[link-internal\\]{(.*?)}/g,\r\n      (_0, name) => name\r\n    )\r\n    journalClone.content = journalClone.content.replace(\r\n      /@JournalEntry\\[tip-([\\w-]+)\\]{(.*?)}/g,\r\n      (_0, original, name) => {\r\n        for (const value of allJournals.values()) {\r\n          if (value.data.name.toLowerCase() === name.toLowerCase()) { return `@JournalEntry[${value.data._id}]{${name}}` }\r\n        }\r\n        return name\r\n      }\r\n    )\r\n    await journal.update(journalClone)\r\n  }\r\n}\r\n","import { getTownName } from './getTownName'\r\nimport { getTownSize } from './getTownSize'\r\nimport { iterateJson } from './iterateJson'\r\nimport { parseSecAttributes } from './parseSecAttributes'\r\nimport { secondPassActors } from './secondPassActors'\r\nimport { secondPassJournals } from './secondPassJournals'\r\nimport { loading } from './Utils'\r\n\r\nexport const createCity = async (\r\n  rawText: string,\r\n  NPCsAsActors,\r\n  hasCustomNPCLocation,\r\n  location\r\n) => {\r\n  const jsonData = JSON.parse(rawText)\r\n  const loadingBar = loading('Importing city.')(0)(getTownSize(jsonData) - 1)\r\n  const townName = getTownName(jsonData)\r\n\r\n  const mainFolder = await Folder.create({\r\n    name: townName,\r\n    type: 'JournalEntry',\r\n    parent: null\r\n  })\r\n  const secAttrParser = parseSecAttributes(\r\n    NPCsAsActors,\r\n    mainFolder.data._id,\r\n    loadingBar,\r\n    hasCustomNPCLocation,\r\n    location\r\n  )\r\n\r\n  const ids = await iterateJson(\r\n    jsonData,\r\n    townName,\r\n    mainFolder.data._id,\r\n    NPCsAsActors,\r\n    loadingBar,\r\n    secAttrParser\r\n  )\r\n  ids[0][0].set('town', `Description of ${townName}`)\r\n\r\n  await secondPassJournals(ids[0], loadingBar)\r\n  if (NPCsAsActors) { await secondPassActors(ids[1]) }\r\n\r\n  ui.notifications?.info('Your city has been imported successfully')\r\n}\r\n","import '@league-of-foundry-developers/foundry-vtt-types'\nimport { createCity } from './createCity'\nlet game: Game\nconst prepareDisplayName = (folder: Folder) => {\n  if (folder.depth === 1) return folder.data.name\n  return (\n    prepareDisplayName(game.folders.get(folder.data.parent)) +\n    '/' +\n    folder.data.name\n  )\n}\n\nconst isFoundry8 = () => {\n  const foundryVersion = game.data.version\n  return foundryVersion >= '0.8.0' && foundryVersion < '0.9.0'\n}\n\ntype Height = number | 'auto'\nconst height = 'auto'\n\nexport default class ImportWindow extends Application {\n  static get defaultOptions() {\n    return {\n      ...super.defaultOptions,\n      id: 'md-importer',\n      template: 'modules/EEEG-Importer/templates/importer.html',\n      resizable: false,\n      height: height,\n      width: 400,\n      minimizable: true,\n      title: 'EEEG Importer'\n    }\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html)\n\n    const locationSelector = html.find('#customLocation')\n    const locationSelectorActors = html.find('#customLocationActor')\n\n    const folders = isFoundry8() ? game.folders : game.folders.entries\n    for (const folder of folders) {\n      if (folder.data.type === 'JournalEntry') {\n        locationSelector.append(\n          new Option(prepareDisplayName(folder), folder.data._id)\n        )\n      }\n      if (folder.data.type === 'Actor') {\n        locationSelectorActors.append(\n          new Option(prepareDisplayName(folder), folder.data._id)\n        )\n      }\n    }\n\n    html.find('#submit').on('click', () => {\n      const textContent = html.find('#text-input')[0].value\n      const importAsActors = html.find('#NPCsActors')[0].checked\n      const selectedLocation = locationSelector.find('option:selected').val()\n      const selectedLocationActors = locationSelectorActors\n        .find('option:selected')\n        .val()\n\n      createCity(\n        textContent,\n        importAsActors,\n        [selectedLocation !== 'default', selectedLocationActors !== 'default'],\n        [selectedLocation, selectedLocationActors]\n      )\n    })\n  }\n}\n","import ImportWindow from '../lib/ImportWindow'\n\nHooks.on('renderSidebarTab', async (app, html) => {\n  if (app?.options?.id === 'journal') {\n    const buttonDiv = $(\n      \"<div class='action-buttons header-actions flexrow'></div>\"\n    )\n    const button = $(\n      \"<button class='import-markdown'><i class='fas fa-file-import'></i>EEEG Import</button>\"\n    )\n    button.on('click', () => {\n      new ImportWindow().render(true)\n    })\n    buttonDiv.append(button)\n    html.find('.header-actions').after(buttonDiv)\n  }\n})\n"],"names":["game","createActor","entityName","rawText","folder","Actor","create","name","data","details","biography","value","prepareText","type","createAndUpdateActor","uidToActorIdMap","createdActorsArray","actorData","NPCFolder","newActor","output","set","key","_id","push","decodeHTML","txt","document","createElement","innerHTML","decoded","$a","$","html","located","find","replaceWith","index","text","id","getAttribute","includes","createJournalEntry","JournalEntry","content","createAndUpdateJournal","uidToIdMap","createdArray","journalData","newEntry","getTownName","jsonData","parser","DOMParser","elem","parseFromString","start","body","getTownSize","townSize","Object","keys","length","attribute","hasOwnProperty","parseMainAttributes","cityName","attributeData","folderId","iterateJson","NPCsAsActors","loadingBar","parseSecAttr","Map","actorCreateMethod","journalCreateMethod","loading","context","$loading","getElementById","$loadingBar","$context","$progress","min","max","fadeOut","percentage","Math","floor","fadeIn","css","capitalize","charAt","toUpperCase","slice","parseSecAttributes","hasCustomNPCLocation","location","primaryAttribute","attributeType","createJournal","Folder","parent","secAttribute","secondPassActors","ids","allActors","actors","allJournals","journal","actor","get","actorClone","JSON","parse","stringify","replaceText","replace","_0","original","values","toLowerCase","uid","update","secondPassJournals","journalClone","createCity","townName","mainFolder","secAttrParser","ui","notifications","info","prepareDisplayName","depth","folders","isFoundry8","foundryVersion","version","height","ImportWindow","Application","defaultOptions","template","resizable","width","minimizable","title","activateListeners","locationSelector","locationSelectorActors","entries","append","Option","on","textContent","importAsActors","checked","selectedLocation","val","selectedLocationActors","Hooks","app","options","buttonDiv","button","render","after"],"mappings":";;;MAEWA;;QCAEC,WAAW,GAAG,OAAOC,UAAP,EAA2BC,OAA3B,EAAiDC,MAAjD,KAAoF,MAAMC,KAAK,CAACC,MAAN,CAAa;EAChIC,EAAAA,IAAI,EAAEL,UAD0H;EAEhIM,EAAAA,IAAI,EAAE;EACJC,IAAAA,OAAO,EAAE;EACPC,MAAAA,SAAS,EAAE;EACTC,QAAAA,KAAK,EAAEC,WAAW,CAACT,OAAD;EADT;EADJ;EADL,GAF0H;EAShIU,EAAAA,IAAI,EAAE,KAT0H;EAUhIT,EAAAA,MAAM,EAAEA;EAVwH,CAAb;;QCAxGU,oBAAoB,GAAG,CAACC,eAAD,EAAkBC,kBAAlB,KAAyC,OAAOC,SAAP,EAAkBC,SAAlB,KAAwC;EACnH,QAAMC,QAAQ,GAAG,MAAMlB,WAAW,CAChCgB,SAAS,CAACV,IADsB,EAE/B,qBAAoBU,SAAS,CAACG,MAAO,QAFN,EAGhCF,SAHgC,CAAlC;EAKAH,EAAAA,eAAe,CAACM,GAAhB,CAAoBJ,SAAS,CAACK,GAA9B,EAAmCH,QAAQ,CAACX,IAAT,CAAce,GAAjD;EACAP,EAAAA,kBAAkB,CAACQ,IAAnB,CAAwBL,QAAQ,CAACX,IAAT,CAAce,GAAtC;EACD;;ECVM,MAAME,UAAU,GAAItB,OAAD,IAAqB;EAC7C,QAAMuB,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAZ;EACAF,EAAAA,GAAG,CAACG,SAAJ,GAAgB1B,OAAhB;EACA,SAAOuB,GAAG,CAACf,KAAX;EACD,CAJM;;QCGMC,aAAW,GAAIT,OAAD,IAA0B;EACnD,QAAM2B,OAAO,GAAGL,UAAU,CAACtB,OAAD,CAA1B;EACA,QAAM4B,EAAE,GAAGC,CAAC,CAAC,SAAD,EAAY;EAAEC,IAAAA,IAAI,EAAEH;EAAR,GAAZ,CAAZ;EACA,QAAMI,OAAO,GAAGH,EAAE,CAACI,IAAH,CAAQ,gBAAR,CAAhB;EACAD,EAAAA,OAAO,CAACE,WAAR,CAAoB,CAACC,KAAD,EAAQC,IAAR,KAAiB;EACnC,UAAMC,EAAE,GAAGL,OAAO,CAACG,KAAD,CAAP,CAAeG,YAAf,CAA4B,SAA5B,CAAX;EACA,QAAIF,IAAI,CAACG,QAAL,CAAc,gBAAd,CAAJ,EAAqC,OAAQ,uBAAsBH,IAAK,GAAnC;EACrC,WAAOC,EAAE,KAAK,EAAP,IAAaA,EAAb,GAAmB,iBAAgBA,EAAG,KAAID,IAAK,GAA/C,GAAoDA,IAA3D;EACD,GAJD;EAKA,SAAOP,EAAE,CAACE,IAAH,EAAP;EACD;;QCVYS,oBAAkB,GAAG,OAAOxC,UAAP,EAA2BC,OAA3B,EAAiDC,MAAjD,KAChC,MAAMuC,YAAY,CAACrC,MAAb,CAAoB;EACxBC,EAAAA,IAAI,EAAEL,UADkB;EAExB0C,EAAAA,OAAO,EAAEhC,aAAW,CAACT,OAAD,CAFI;EAGxBC,EAAAA,MAAM,EAAEA;EAHgB,CAApB;;QCFKyC,sBAAsB,GAAG,CAACC,UAAD,EAAaC,YAAb,KAA8B,OAAOC,WAAP,EAAkC5C,MAAlC,KAAqD;EACvH,QAAM6C,QAAQ,GAAG,MAAMP,oBAAkB,CACvCM,WAAW,CAACzC,IAD2B,EAEtC,qBAAoByC,WAAW,CAAC5B,MAAO,QAFD,EAGvChB,MAHuC,CAAzC;EAKA0C,EAAAA,UAAU,CAACzB,GAAX,CAAe2B,WAAW,CAAC1B,GAA3B,EAAgC2B,QAAQ,CAACzC,IAAT,CAAce,GAA9C;EACAwB,EAAAA,YAAY,CAACvB,IAAb,CAAkByB,QAAQ,CAACzC,IAAT,CAAce,GAAhC;EACD;;QCRY2B,WAAW,GAAIC,QAAD,IAA4B;EACrD,QAAMC,MAAM,GAAG,IAAIC,SAAJ,EAAf;EACA,QAAMC,IAAI,GAAGF,MAAM,CAACG,eAAP,CAAuBJ,QAAQ,CAACK,KAAhC,EAAuC,WAAvC,CAAb;EACA,SAAOxB,CAAC,CAACsB,IAAI,CAACG,IAAN,CAAD,CAAatB,IAAb,CAAkB,YAAlB,EAAgC,CAAhC,EAAmCK,YAAnC,CAAgD,gBAAhD,CAAP;EACD;;QCJYkB,WAAW,GAAIP,QAAD,IAAoC;EAC7D,MAAIQ,QAAQ,GAAG,CAAf;EACAA,EAAAA,QAAQ,IAAIC,MAAM,CAACC,IAAP,CAAYV,QAAZ,EAAsBW,MAAlC;;EACA,OAAK,MAAMC,SAAX,IAAwBZ,QAAxB,EAAkC;EAChC,QAAI,CAACA,QAAQ,CAACa,cAAT,CAAwBD,SAAxB,CAAL,EAAyC;;EAEzC,QAAI,OAAOZ,QAAQ,CAACY,SAAD,CAAf,KAA+B,QAAnC,EAA6C;EAAEJ,MAAAA,QAAQ,IAAIC,MAAM,CAACC,IAAP,CAAYV,QAAQ,CAACY,SAAD,CAApB,EAAiCD,MAAjC,GAA0C,CAAtD;EAAyD;EACzG;;EACD,SAAOH,QAAP;EACD;;QCTYM,mBAAmB,GAAG,OACjCF,SADiC,EAEjCG,QAFiC,EAGjCC,aAHiC,EAIjCC,QAJiC,EAKjCrB,YALiC,KAM9B;EACH,MAAIxC,IAAI,GAAGwD,SAAS,KAAK,OAAd,GAAwBG,QAAxB,GAAmCH,SAA9C;EACAxD,EAAAA,IAAI,GAAGA,IAAI,KAAK,MAAT,GAAmB,kBAAiB2D,QAAS,EAA7C,GAAiD3D,IAAxD;EAEA,QAAM0C,QAAQ,GAAG,MAAMP,kBAAkB,CAACnC,IAAD,EAAO4D,aAAP,EAAsBC,QAAtB,CAAzC;EACArB,EAAAA,YAAY,CAACvB,IAAb,CAAkByB,QAAQ,CAACzC,IAAT,CAAce,GAAhC;EACD;;QCTY8C,WAAW,GAAG,OACzBlB,QADyB,EAEzBe,QAFyB,EAGzBE,QAHyB,EAIzBE,YAJyB,EAKzBC,UALyB,EAMzBC,YANyB,KAOtB;EACH,QAAM1B,UAAU,GAAG,IAAI2B,GAAJ,EAAnB;EACA,QAAM1D,eAAe,GAAG,IAAI0D,GAAJ,EAAxB;EACA,QAAM1B,YAAY,GAAG,EAArB;EACA,QAAM/B,kBAAkB,GAAG,EAA3B;EACA,QAAM0D,iBAAiB,GAAG5D,oBAAoB,CAC5CC,eAD4C,EAE5CC,kBAF4C,CAA9C;EAIA,QAAM2D,mBAAmB,GAAG9B,sBAAsB,CAACC,UAAD,EAAaC,YAAb,CAAlD;;EAEA,OAAK,MAAMgB,SAAX,IAAwBZ,QAAxB,EAAkC;EAChC,QAAI,CAACA,QAAQ,CAACa,cAAT,CAAwBD,SAAxB,CAAL,EAAyC;EAAE;EAAU;;EAErDQ,IAAAA,UAAU;;EACV,QAAI,OAAOpB,QAAQ,CAACY,SAAD,CAAf,KAA+B,QAAnC,EAA6C;EAC3C,YAAMS,YAAY,CAChBrB,QAAQ,CAACY,SAAD,CADQ,EAEhBA,SAFgB,EAGhBW,iBAHgB,EAIhBC,mBAJgB,CAAlB;EAMD,KAPD,MAOO;EACL,YAAMV,mBAAmB,CACvBF,SADuB,EAEvBG,QAFuB,EAGvBf,QAAQ,CAACY,SAAD,CAHe,EAIvBK,QAJuB,EAKvBrB,YALuB,CAAzB;EAOD;EACF;;EACD,SAAO,CACL,CAACD,UAAD,EAAaC,YAAb,CADK,EAEL,CAAChC,eAAD,EAAkBC,kBAAlB,CAFK,CAAP;EAID;;QChDY4D,OAAO,GAAIC,OAAD,IAAa;EAClC,QAAMC,QAAQ,GAAGnD,QAAQ,CAACoD,cAAT,CAAwB,SAAxB,CAAjB;EACA,QAAMC,WAAW,GAAGF,QAAQ,CAAC3C,IAAT,CAAc,cAAd,CAApB;EACA,QAAM8C,QAAQ,GAAGD,WAAW,CAAC7C,IAAZ,CAAiB,UAAjB,CAAjB;EACA,QAAM+C,SAAS,GAAGF,WAAW,CAAC7C,IAAZ,CAAiB,WAAjB,CAAlB;EACA8C,EAAAA,QAAQ,CAAC3C,IAAT,CAAcuC,OAAO,IAAI,EAAzB;EAEA,SAAQM,GAAD,IAAkBC,GAAD,IAAiB,MAAM;EAC7C,QAAID,GAAG,IAAIC,GAAX,EAAgB;EACdN,MAAAA,QAAQ,CAACO,OAAT;EACA;EACD;;EAED,UAAMC,UAAU,GAAGC,IAAI,CAACJ,GAAL,CAASI,IAAI,CAACC,KAAL,CAAYL,GAAG,GAAG,GAAP,GAAcC,GAAzB,CAAT,EAAwC,GAAxC,CAAnB;EACAN,IAAAA,QAAQ,CAACW,MAAT;EACAP,IAAAA,SAAS,CAAC5C,IAAV,CAAgB,GAAEgD,UAAW,GAA7B;EACAN,IAAAA,WAAW,CAACU,GAAZ,CAAgB,OAAhB,EAA0B,GAAEJ,UAAW,GAAvC;EACA,MAAEH,GAAF;EACD,GAXD;EAYD;QAEYQ,UAAU,GAAIrD,IAAD,IAAkBA,IAAI,CAACsD,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BvD,IAAI,CAACwD,KAAL,CAAW,CAAX;;QClB9DC,kBAAkB,GAAG,CAACzB,YAAD,EAAeF,QAAf,EAAyBG,UAAzB,EAAqCyB,oBAArC,EAA2DC,QAA3D,KAChC,OAAOC,gBAAP,EAAyBC,aAAzB,EAAyDlG,WAAzD,EAAsEmG,aAAtE,KAAwF;EACtF,MAAIhG,MAAJ,EAAYc,SAAZ;;EACA,MAAI,EAAE8E,oBAAoB,CAAC,CAAD,CAApB,IAA2BG,aAAa,KAAK,MAA/C,CAAJ,EAA4D;EAC1D/F,IAAAA,MAAM,GAAG,MAAMiG,MAAM,CAAC/F,MAAP,CAAc;EAC3BC,MAAAA,IAAI,EAAEoF,UAAU,CAACQ,aAAD,CADW;EAE3BtF,MAAAA,IAAI,EAAE,cAFqB;EAG3ByF,MAAAA,MAAM,EAAElC;EAHmB,KAAd,CAAf;EAKD;;EAED,MAAIE,YAAY,IAAI6B,aAAa,KAAK,MAAlC,IAA4C,CAACH,oBAAoB,CAAC,CAAD,CAArE,EAA0E;EACxE9E,IAAAA,SAAS,GAAG,MAAMmF,MAAM,CAAC/F,MAAP,CAAc;EAC9BC,MAAAA,IAAI,EAAEoF,UAAU,CAACQ,aAAD,CADc;EAE9BtF,MAAAA,IAAI,EAAE,OAFwB;EAG9ByF,MAAAA,MAAM,EAAE;EAHsB,KAAd,CAAlB;EAKD;;EAED,OAAK,MAAMC,YAAX,IAA2BL,gBAA3B,EAA6C;EAC3C,QAAI,CAACA,gBAAgB,CAAClC,cAAjB,CAAgCuC,YAAhC,CAAL,EAAoD;EAAE;EAAU;;EAChEhC,IAAAA,UAAU;;EAEV,QAAID,YAAY,IAAI6B,aAAa,KAAK,MAAtC,EAA8C;EAC5C,YAAMlG,WAAW,CACfiG,gBAAgB,CAACK,YAAD,CADD,EAEfP,oBAAoB,CAAC,CAAD,CAApB,GAA0BC,QAAQ,CAAC,CAAD,CAAlC,GAAwC/E,SAAS,CAACV,IAAV,CAAee,GAFxC,CAAjB;EAID;;EACD,UAAM6E,aAAa,CACjBF,gBAAgB,CAACK,YAAD,CADC,EAEjBP,oBAAoB,CAAC,CAAD,CAApB,IAA2BG,aAAa,KAAK,MAA7C,GACIF,QAAQ,CAAC,CAAD,CADZ,GAEI7F,MAAM,CAACI,IAAP,CAAYe,GAJC,CAAnB;EAMD;EACF;;QCrCUiF,gBAAgB,GAAG,MAAOC,GAAP,IAAe;EAC7C,QAAMC,SAAiB,GAAG1G,MAAI,CAAC2G,MAA/B;EACA,QAAMC,WAAoB,GAAG5G,MAAI,CAAC6G,OAAlC;;EACA,OAAK,MAAMtE,EAAX,IAAiBkE,GAAG,CAAC,CAAD,CAApB,EAAyB;EACvB,UAAMK,KAAK,GAAGJ,SAAS,CAACK,GAAV,CAAcxE,EAAd,CAAd;;EACA,QAAI,CAACuE,KAAL,EAAY;EAAE;EAAU;;EACxB,UAAME,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,KAAf,CAAX,CAAnB;EACA,QAAIM,WAAW,GAAGJ,UAAU,CAACxG,IAAX,CAAgBC,OAAhB,CAAwBC,SAAxB,CAAkCC,KAApD;EACAyG,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CACZ,kCADY,EAEZ,CAACC,EAAD,EAAKC,QAAL,EAAehH,IAAf,KAAwB;EACtB,WAAK,MAAMI,KAAX,IAAoBiG,WAAW,CAACY,MAAZ,EAApB,EAA0C;EACxC,YAAI7G,KAAK,CAACH,IAAN,CAAWD,IAAX,CAAgBkH,WAAhB,OAAkClH,IAAI,CAACkH,WAAL,EAAtC,EAA0D;EAAE,iBAAQ,iBAAgB9G,KAAK,CAACH,IAAN,CAAWe,GAAI,KAAIhB,IAAK,GAAhD;EAAoD;EACjH;;EACD,aAAOA,IAAP;EACD,KAPW,CAAd;EASA6G,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CACZ,yCADY,EAEZ,CAACC,EAAD,EAAKI,GAAL,KAAc,UAASjB,GAAG,CAAC,CAAD,CAAH,CAAOM,GAAP,CAAWW,GAAX,CAAgB,GAF3B,CAAd;EAIAN,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CACZ,6BADY,EAEZ,CAACC,EAAD,EAAK/G,IAAL,KAAcA,IAFF,CAAd;EAIAyG,IAAAA,UAAU,CAACxG,IAAX,CAAgBC,OAAhB,CAAwBC,SAAxB,CAAkCC,KAAlC,GAA0CyG,WAA1C;EACA,UAAMN,KAAK,CAACa,MAAN,CAAaX,UAAb,CAAN;EACD;EACF;;QC3BYY,kBAAkB,GAAG,OAAOnB,GAAP,EAAYlC,UAAZ,KAA2B;EAC3D,QAAMqC,WAAoB,GAAG5G,MAAI,CAAC6G,OAAlC;;EACA,OAAK,MAAMtE,EAAX,IAAiBkE,GAAG,CAAC,CAAD,CAApB,EAAyB;EACvBlC,IAAAA,UAAU;EACV,UAAMsC,OAAO,GAAGD,WAAW,CAACG,GAAZ,CAAgBxE,EAAhB,CAAhB;EACA,UAAMsF,YAAY,GAAGZ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,OAAf,CAAX,CAArB;EACAgB,IAAAA,YAAY,CAACjF,OAAb,GAAuBiF,YAAY,CAACjF,OAAb,CAAqByE,OAArB,CACrB,yBADqB,EAErB,CAACC,EAAD,EAAKI,GAAL,KAAc,iBAAgBjB,GAAG,CAAC,CAAD,CAAH,CAAOM,GAAP,CAAWW,GAAX,KAAmBjB,GAAG,CAAC,CAAD,CAAH,CAAOM,GAAP,CAAWpB,UAAU,CAAC+B,GAAD,CAArB,CAA4B,GAFxD,CAAvB;EAIAG,IAAAA,YAAY,CAACjF,OAAb,GAAuBiF,YAAY,CAACjF,OAAb,CAAqByE,OAArB,CACrB,yCADqB,EAErB,CAACC,EAAD,EAAKI,GAAL,KAAc,iBAAgBjB,GAAG,CAAC,CAAD,CAAH,CAAOM,GAAP,CAAWW,GAAX,CAAgB,GAFzB,CAAvB;EAIAG,IAAAA,YAAY,CAACjF,OAAb,GAAuBiF,YAAY,CAACjF,OAAb,CAAqByE,OAArB,CACrB,oCADqB,EAErB,CAACC,EAAD,EAAK/G,IAAL,KAAcA,IAFO,CAAvB;EAIAsH,IAAAA,YAAY,CAACjF,OAAb,GAAuBiF,YAAY,CAACjF,OAAb,CAAqByE,OAArB,CACrB,wCADqB,EAErB,CAACC,EAAD,EAAK/G,IAAL,KAAcA,IAFO,CAAvB;EAIAsH,IAAAA,YAAY,CAACjF,OAAb,GAAuBiF,YAAY,CAACjF,OAAb,CAAqByE,OAArB,CACrB,uCADqB,EAErB,CAACC,EAAD,EAAKC,QAAL,EAAehH,IAAf,KAAwB;EACtB,WAAK,MAAMI,KAAX,IAAoBiG,WAAW,CAACY,MAAZ,EAApB,EAA0C;EACxC,YAAI7G,KAAK,CAACH,IAAN,CAAWD,IAAX,CAAgBkH,WAAhB,OAAkClH,IAAI,CAACkH,WAAL,EAAtC,EAA0D;EAAE,iBAAQ,iBAAgB9G,KAAK,CAACH,IAAN,CAAWe,GAAI,KAAIhB,IAAK,GAAhD;EAAoD;EACjH;;EACD,aAAOA,IAAP;EACD,KAPoB,CAAvB;EASA,UAAMsG,OAAO,CAACc,MAAR,CAAeE,YAAf,CAAN;EACD;EACF;;QC5BYC,UAAU,GAAG,OACxB3H,OADwB,EAExBmE,YAFwB,EAGxB0B,oBAHwB,EAIxBC,QAJwB,KAKrB;EACH,QAAM9C,QAAQ,GAAG8D,IAAI,CAACC,KAAL,CAAW/G,OAAX,CAAjB;EACA,QAAMoE,UAAU,GAAGK,OAAO,CAAC,iBAAD,CAAP,CAA2B,CAA3B,EAA8BlB,WAAW,CAACP,QAAD,CAAX,GAAwB,CAAtD,CAAnB;EACA,QAAM4E,QAAQ,GAAG7E,WAAW,CAACC,QAAD,CAA5B;EAEA,QAAM6E,UAAU,GAAG,MAAM3B,MAAM,CAAC/F,MAAP,CAAc;EACrCC,IAAAA,IAAI,EAAEwH,QAD+B;EAErClH,IAAAA,IAAI,EAAE,cAF+B;EAGrCyF,IAAAA,MAAM,EAAE;EAH6B,GAAd,CAAzB;EAKA,QAAM2B,aAAa,GAAGlC,kBAAkB,CACtCzB,YADsC,EAEtC0D,UAAU,CAACxH,IAAX,CAAgBe,GAFsB,EAGtCgD,UAHsC,EAItCyB,oBAJsC,EAKtCC,QALsC,CAAxC;EAQA,QAAMQ,GAAG,GAAG,MAAMpC,WAAW,CAC3BlB,QAD2B,EAE3B4E,QAF2B,EAG3BC,UAAU,CAACxH,IAAX,CAAgBe,GAHW,EAI3B+C,YAJ2B,EAK3BC,UAL2B,EAM3B0D,aAN2B,CAA7B;EAQAxB,EAAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,EAAUpF,GAAV,CAAc,MAAd,EAAuB,kBAAiB0G,QAAS,EAAjD;EAEA,QAAMH,kBAAkB,CAACnB,GAAG,CAAC,CAAD,CAAJ,EAASlC,UAAT,CAAxB;;EACA,MAAID,YAAJ,EAAkB;EAAE,UAAMkC,gBAAgB,CAACC,GAAG,CAAC,CAAD,CAAJ,CAAtB;EAAgC;;EAEpDyB,EAAAA,EAAE,CAACC,aAAH,EAAkBC,IAAlB,CAAuB,0CAAvB;EACD;;EC3CD,IAAIpI,IAAJ;;EACA,MAAMqI,kBAAkB,GAAIjI,MAAD,IAAoB;EAC7C,MAAIA,MAAM,CAACkI,KAAP,KAAiB,CAArB,EAAwB,OAAOlI,MAAM,CAACI,IAAP,CAAYD,IAAnB;EACxB,SACE8H,kBAAkB,CAACrI,IAAI,CAACuI,OAAL,CAAaxB,GAAb,CAAiB3G,MAAM,CAACI,IAAP,CAAY8F,MAA7B,CAAD,CAAlB,GACA,GADA,GAEAlG,MAAM,CAACI,IAAP,CAAYD,IAHd;EAKD,CAPD;;EASA,MAAMiI,UAAU,GAAG,MAAM;EACvB,QAAMC,cAAc,GAAGzI,IAAI,CAACQ,IAAL,CAAUkI,OAAjC;EACA,SAAOD,cAAc,IAAI,OAAlB,CAAP;EACD,CAHD;;EAMA,MAAME,MAAM,GAAG,MAAf;EAEe,MAAMC,YAAN,SAA2BC,WAA3B,CAAuC;EAC3B,aAAdC,cAAc,GAAG;EAC1B,WAAO,EACL,GAAG,MAAMA,cADJ;EAELvG,MAAAA,EAAE,EAAE,aAFC;EAGLwG,MAAAA,QAAQ,EAAE,+CAHL;EAILC,MAAAA,SAAS,EAAE,KAJN;EAKLL,MAAAA,MAAM,EAAEA,MALH;EAMLM,MAAAA,KAAK,EAAE,GANF;EAOLC,MAAAA,WAAW,EAAE,IAPR;EAQLC,MAAAA,KAAK,EAAE;EARF,KAAP;EAUD;;EAEDC,EAAAA,iBAAiB,CAACnH,IAAD,EAAO;EACtB,UAAMmH,iBAAN,CAAwBnH,IAAxB;EAEA,UAAMoH,gBAAgB,GAAGpH,IAAI,CAACE,IAAL,CAAU,iBAAV,CAAzB;EACA,UAAMmH,sBAAsB,GAAGrH,IAAI,CAACE,IAAL,CAAU,sBAAV,CAA/B;EAEA,UAAMoG,OAAO,GAAGC,UAAU,KAAKxI,IAAI,CAACuI,OAAV,GAAoBvI,IAAI,CAACuI,OAAL,CAAagB,OAA3D;;EACA,SAAK,MAAMnJ,MAAX,IAAqBmI,OAArB,EAA8B;EAC5B,UAAInI,MAAM,CAACI,IAAP,CAAYK,IAAZ,KAAqB,cAAzB,EAAyC;EACvCwI,QAAAA,gBAAgB,CAACG,MAAjB,CACE,IAAIC,MAAJ,CAAWpB,kBAAkB,CAACjI,MAAD,CAA7B,EAAuCA,MAAM,CAACI,IAAP,CAAYe,GAAnD,CADF;EAGD;;EACD,UAAInB,MAAM,CAACI,IAAP,CAAYK,IAAZ,KAAqB,OAAzB,EAAkC;EAChCyI,QAAAA,sBAAsB,CAACE,MAAvB,CACE,IAAIC,MAAJ,CAAWpB,kBAAkB,CAACjI,MAAD,CAA7B,EAAuCA,MAAM,CAACI,IAAP,CAAYe,GAAnD,CADF;EAGD;EACF;;EAEDU,IAAAA,IAAI,CAACE,IAAL,CAAU,SAAV,EAAqBuH,EAArB,CAAwB,OAAxB,EAAiC,MAAM;EACrC,YAAMC,WAAW,GAAG1H,IAAI,CAACE,IAAL,CAAU,aAAV,EAAyB,CAAzB,EAA4BxB,KAAhD;EACA,YAAMiJ,cAAc,GAAG3H,IAAI,CAACE,IAAL,CAAU,aAAV,EAAyB,CAAzB,EAA4B0H,OAAnD;EACA,YAAMC,gBAAgB,GAAGT,gBAAgB,CAAClH,IAAjB,CAAsB,iBAAtB,EAAyC4H,GAAzC,EAAzB;EACA,YAAMC,sBAAsB,GAAGV,sBAAsB,CAClDnH,IAD4B,CACvB,iBADuB,EAE5B4H,GAF4B,EAA/B;EAIAjC,MAAAA,UAAU,CACR6B,WADQ,EAERC,cAFQ,EAGR,CAACE,gBAAgB,KAAK,SAAtB,EAAiCE,sBAAsB,KAAK,SAA5D,CAHQ,EAIR,CAACF,gBAAD,EAAmBE,sBAAnB,CAJQ,CAAV;EAMD,KAdD;EAeD;;EAjDmD;;EClBtDC,KAAK,CAACP,EAAN,CAAS,kBAAT,EAA6B,OAAOQ,GAAP,EAAYjI,IAAZ,KAAqB;EAChD,MAAIiI,GAAG,EAAEC,OAAL,EAAc5H,EAAd,KAAqB,SAAzB,EAAoC;EAClC,UAAM6H,SAAS,GAAGpI,CAAC,CACjB,2DADiB,CAAnB;EAGA,UAAMqI,MAAM,GAAGrI,CAAC,CACd,wFADc,CAAhB;EAGAqI,IAAAA,MAAM,CAACX,EAAP,CAAU,OAAV,EAAmB,MAAM;EACvB,UAAId,YAAJ,GAAmB0B,MAAnB,CAA0B,IAA1B;EACD,KAFD;EAGAF,IAAAA,SAAS,CAACZ,MAAV,CAAiBa,MAAjB;EACApI,IAAAA,IAAI,CAACE,IAAL,CAAU,iBAAV,EAA6BoI,KAA7B,CAAmCH,SAAnC;EACD;EACF,CAdD;;;;;;;;;;;;;;;;;;;;;;;;;;;"}